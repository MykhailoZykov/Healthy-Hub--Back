{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Food_diary_Backend",
    "description": "web app about your calories"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000/api" },
    { "url": "https://food-diary-backend-kr1b.onrender.com/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "Users endpoints"
    },
    {
      "name": "Recommended food",
      "description": "Recommended food endpoints"
    }
  ],

  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign up new user",
        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorConflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign in existing user",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Signs out user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User signed out"
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "User forgot his password",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "User's email",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": "200"
                    },
                    "message": {
                      "type": "string",
                      "example": "Новий пароль відправлено на ваш email"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBadRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User ?????",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get information about the current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Logged user returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": ["User"],
        "summary": "User updating information ?????",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update profile settings",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/goal": {
      "put": {
        "tags": ["User"],
        "summary": "Update user goal?????",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "New user goal",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["goal"],
                "properties": {
                  "goal": {
                    "type": "string",
                    "enum": ["Lose Fat", "Maintain", "Gain Muscle"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The goal has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "New goal",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "User's name",
                      "example": "Anna Smith"
                    },
                    "goal": {
                      "type": "string",
                      "description": "User's goal",
                      "enum": ["Lose Fat", "Maintain", "Gain Muscle"],
                      "example": "Lose Fat"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/weight": {
      "post": {
        "tags": ["User"],
        "summary": "Create and update the user's current weight",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Current weight",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["weight"],
                "properties": {
                  "weight": {
                    "type": "number",
                    "example": 55
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The weight has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "New weight",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "User's name",
                      "example": "Anna Smith"
                    },
                    "weight": {
                      "type": "number",
                      "description": "User's weight",
                      "example": 55
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/food-intake": {
      "post": {
        "tags": ["User"],
        "summary": "Information about consumed food",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete information about the consumed food for the current date",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The goal has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "New goal",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "User's name",
                      "example": "Anna Smith"
                    },
                    "goal": {
                      "type": "string",
                      "description": "User's goal",
                      "enum": ["Lose Fat", "Maintain", "Gain Muscle"],
                      "example": "Lose Fat"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/food-intake/{userId}": {
      "put": {
        "tags": ["User"],
        "summary": "Update information about consumed food by identifier (id).",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": "true",
            "type": "string",
            "description": "user's id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The goal has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "New goal",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "User's name",
                      "example": "Anna Smith"
                    },
                    "goal": {
                      "type": "string",
                      "description": "User's goal",
                      "enum": ["Lose Fat", "Maintain", "Gain Muscle"],
                      "example": "Lose Fat"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/water-intake": {
      "post": {
        "tags": ["User"],
        "summary": "Adding the water consumed by the user for the current date",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The goal has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "New goal",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "User's name",
                      "example": "Anna Smith"
                    },
                    "goal": {
                      "type": "string",
                      "description": "User's goal",
                      "enum": ["Lose Fat", "Maintain", "Gain Muscle"],
                      "example": "Lose Fat"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete information about the consumed water for the current date",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The goal has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "New goal",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "User's name",
                      "example": "Anna Smith"
                    },
                    "goal": {
                      "type": "string",
                      "description": "User's goal",
                      "enum": ["Lose Fat", "Maintain", "Gain Muscle"],
                      "example": "Lose Fat"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/statistics": {
      "get": {
        "tags": ["User"],
        "summary": "Statistics",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "The goal has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "New goal",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "User's name",
                      "example": "Anna Smith"
                    },
                    "goal": {
                      "type": "string",
                      "description": "User's goal",
                      "enum": ["Lose Fat", "Maintain", "Gain Muscle"],
                      "example": "Lose Fat"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recommended-food": {
      "get": {
        "tags": ["Recommended food"],
        "summary": "List of recommended products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all recommended food",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayAllFoodResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "password",
          "email",
          "goal",
          "gender",
          "age",
          "height",
          "weight",
          "activity"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Anna Smith"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          },
          "goal": {
            "type": "string",
            "description": "User's goal",
            "enum": ["Lose Fat", "Maintain", "Gain Muscle"],
            "example": "Lose Fat"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          },
          "age": {
            "type": "integer",
            "description": "User's age",
            "example": 32
          },
          "height": {
            "type": "integer",
            "description": "User's height",
            "example": 170
          },
          "weight": {
            "type": "integer",
            "description": "User's weight",
            "example": 55
          },
          "activity": {
            "type": "number",
            "description": "User's activity",
            "example": 1.2
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Anna Smith"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          },
          "goal": {
            "type": "string",
            "description": "User's goal",
            "example": "Lose Fat"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          },
          "age": {
            "type": "integer",
            "description": "User's age",
            "example": 32
          },
          "height": {
            "type": "integer",
            "description": "User's height",
            "example": 170
          },
          "weight": {
            "type": "integer",
            "description": "User's weight",
            "example": 55
          },
          "activity": {
            "type": "number",
            "description": "User's activity",
            "example": 1.2
          }
        },
        "example": {
          "user": {
            "name": "Anna Smith",
            "email": "Anna_Smith@mail.com",
            "goal": "Maintain",
            "gender": "female",
            "age": 32,
            "height": 170,
            "weight": 55,
            "activity": 1.2
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["password", "email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "123456"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Anna Smith"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },
        "example": {
          "token": "fkajefh765765akejfhk",
          "user": {
            "name": "Anna Smith",
            "email": "Anna_Smith@mail.com"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Anna Smith"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },

          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          },
          "age": {
            "type": "integer",
            "description": "User's age",
            "example": 32
          },
          "height": {
            "type": "integer",
            "description": "User's height",
            "example": 170
          },
          "weight": {
            "type": "integer",
            "description": "User's weight",
            "example": 55
          },
          "activity": {
            "type": "number",
            "description": "User's activity",
            "example": 1.2
          },
          "goal": {
            "type": "string",
            "enum": ["Lose Fat", "Maintain", "Gain Muscle"]
          },
          "recommendedFat": {
            "type": "number",
            "example": 1.2
          },
          "recommendedProtein": {
            "type": "number",
            "example": 517
          },
          "recommendedCarbs": {
            "type": "number",
            "example": 1421
          },
          "recommendedWater": {
            "type": "number",
            "example": 1.65
          },
          "recommendedCalories": {
            "type": "number",
            "example": 2584
          },
          "avatarURL": {
            "type": "string",
            "example": "https://cdn-icons-png.flaticon.com/256/805/805439.png"
          }
        },
        "example": {
          "email": "anna@mail.com",
          "name": "Anna",
          "gender": "female",
          "weight": 55,
          "height": 175,
          "age": 32,
          "activity": 1.9,
          "goal": "Maintain",
          "recommendedFat": 646,
          "recommendedProtein": 517,
          "recommendedCarbs": 1421,
          "recommendedWater": 1.65,
          "recommendedCalories": 2584,
          "avatarURL": "https://cdn-icons-png.flaticon.com/256/805/805439.png"
        }
      },
      "UpdateRequest": {
        "type": "object",
        "required": ["gender", "age", "height", "weight", "activity"],
        "properties": {
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          },
          "age": {
            "type": "integer",
            "description": "User's age",
            "example": 32
          },
          "height": {
            "type": "integer",
            "description": "User's height",
            "example": 170
          },
          "weight": {
            "type": "integer",
            "description": "User's weight",
            "example": 55
          },
          "activity": {
            "type": "number",
            "description": "User's activity",
            "example": 1.2
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "Female"
          },
          "age": {
            "type": "integer",
            "description": "User's age",
            "example": 32
          },
          "height": {
            "type": "integer",
            "description": "User's height",
            "example": 170
          },
          "weight": {
            "type": "integer",
            "description": "User's weight",
            "example": 55
          },
          "activity": {
            "type": "number",
            "description": "User's activity",
            "example": 1.2
          }
        },
        "example": {
          "_id": "6580d675b14c4b0dfc51fecc",
          "name": "Anna",
          "password": "$2a$10$Lq1FWAFWvqiGWFE71cH1Pe4hU9gHm4OBbkuI8NuIh0ilyDm6C8rwq",
          "email": "anna@mail.com",
          "goal": "Maintain",
          "gender": "female",
          "age": 32,
          "height": 175,
          "weight": 65,
          "activity": 1.3,
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ODBkNjc1YjE0YzRiMGRmYzUxZmVjYyIsImlhdCI6MTcwMjk0MjM0NCwiZXhwIjoxNzAzMDI4NzQ0fQ.vvAOcHEjpxFwc2m0kHtgw6Q3fBV_yHdnd0z0_8jWT9w",
          "avatarURL": "https://cdn-icons-png.flaticon.com/256/805/805439.png",
          "recommendedFat": 472,
          "recommendedProtein": 378,
          "recommendedCarbs": 1038,
          "recommendedWater": 1.95,
          "recommendedCalories": 1888,
          "createdAt": "2023-12-18T23:32:05.818Z",
          "updatedAt": "2023-12-18T23:56:08.118Z"
        }
      },

      "ErrorBadRequestResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Error status code",
            "example": "400"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Bad request"
          }
        }
      },
      "ErrorConflictResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Error status code",
            "example": "409"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "User with email - user@example.com, already exist"
          }
        }
      },
      "ErrorUnauthorizedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Error status code",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Not authorized"
          }
        }
      },
      "ErrorLoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Error status code",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email or password invalid"
          }
        }
      },
      "ErrorNotFoundResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Error status code",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Not found"
          }
        }
      },

      "ArrayAllFoodResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "All recommended food",
          "properties": {
            "name": {
              "type": "string",
              "example": "Apples"
            },
            "amount": {
              "type": "string",
              "example": "100 g"
            },
            "img": {
              "type": "string",
              "example": "https://ftp.goit.study/img/you_health/Apples.png"
            },
            "calories": {
              "type": "number",
              "example": 52
            },
            "nutrition": {
              "type": "object",
              "properties": {
                "carbohydrates": {
                  "type": "number",
                  "example": 14
                },
                " protein": {
                  "type": "number",
                  "example": 0.3
                },
                "fat": {
                  "type": "number",
                  "example": 0.2
                }
              }
            }
          }
        },
        "example": [
          {
            "name": "Apples",
            "amount": "100 g",
            "img": "https://ftp.goit.study/img/you_health/Apples.png",
            "calories": 52,
            "nutrition": {
              "carbohydrates": 14,
              "protein": 0.3,
              "fat": 0.2
            }
          },
          {
            "name": "Strawberries",
            "amount": "100 g",
            "img": "https://ftp.goit.study/img/you_health/Strawberries.png",
            "calories": 32,
            "nutrition": {
              "carbohydrates": 7.68,
              "protein": 0.67,
              "fat": 0.3
            }
          }
        ]
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
